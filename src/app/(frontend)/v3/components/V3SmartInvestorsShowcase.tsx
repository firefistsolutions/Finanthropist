'use client'

import React, { useState, useEffect } from 'react'
import { TrendingUp, Users, Award, Target } from 'lucide-react'

// Individual Digit Component for Odometer Effect
const OdometerDigit: React.FC<{ digit: number }> = ({ digit }) => {
  return (
    <div className="relative inline-block w-4 h-12 overflow-hidden rounded-lg">
      <div
        className="absolute flex flex-col transition-transform duration-700 ease-out"
        style={{
          transform: `translateY(-${digit * 3}rem)`, // 3rem = 48px (h-12)
        }}
      >
        {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((num) => (
          <div
            key={num}
            className="w-full h-12 text-2xl flex items-center justify-center font-bold text-green-400"
          >
            {num}
          </div>
        ))}
      </div>
    </div>
  )
}

// Simple Rolling Odometer Component
const RollingOdometer: React.FC<{ value: number }> = ({ value }) => {
  // Convert number to individual digits (always 4 digits)
  const valueString = Math.floor(value).toString().padStart(4, '0')
  const digits = valueString.split('').map(Number)

  return (
    <div className="flex items-center space-x-1">
      <span className="text-3xl font-bold text-green-400 mr-2">₹</span>
      <div className="flex space-x-1">
        {digits.map((digit, index) => (
          <OdometerDigit key={index} digit={digit} />
        ))}
      </div>
    </div>
  )
}

export default function V3SmartInvestorsShowcase() {
  const [currentPnL, setCurrentPnL] = useState(4500)
  const [changePercent, setChangePercent] = useState(2.5)

  useEffect(() => {
    // Predefined sequence of clean numbers from 4500 to 5000
    const pnlSequence = Array(100)
      .fill(0)
      .map((_, i) => 4500 + i * 25)

    const percentSequence = pnlSequence.map((pnl) =>
      parseFloat((((pnl - 4500) / 4500) * 100).toFixed(2)),
    )

    let currentIndex = 0

    const interval = setInterval(() => {
      setCurrentPnL(pnlSequence[currentIndex])
      setChangePercent(percentSequence[currentIndex])

      currentIndex = (currentIndex + 1) % pnlSequence.length
    }, 2500) // Change every 2.5 seconds

    return () => clearInterval(interval)
  }, [])

  const achievementStats = [
    {
      icon: TrendingUp,
      label: 'Average Returns',
      value: '25.8%',
      description: 'Monthly student gains',
    },
    {
      icon: Users,
      label: 'Active Traders',
      value: '25,000+',
      description: 'Students actively trading',
    },
    {
      icon: Award,
      label: 'Success Rate',
      value: '87%',
      description: 'Students achieving profits',
    },
    {
      icon: Target,
      label: 'Total Profits',
      value: '₹2.5Cr+',
      description: 'Generated by students',
    },
  ]

  return (
    <section className="py-16 bg-gradient-to-br from-slate-900 to-blue-900">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <div className="text-center mb-16">
          <h2 className="text-4xl md:text-5xl font-light mb-6 text-white">
            Built For Smart{' '}
            <span className="bg-gradient-to-r from-emerald-400 to-blue-400 bg-clip-text text-transparent font-medium">
              Investors
            </span>
          </h2>
          <p className="text-xl text-gray-300 max-w-3xl mx-auto leading-relaxed">
            We&apos;re on a mission to elevate your financial journey through expert education,
            strategic guidance, and comprehensive trading services at our premier institute.
          </p>
        </div>

        <div className="grid lg:grid-cols-2 gap-12 items-center mb-16">
          {/* Live Student PnL Dashboard */}
          <div className="relative">
            <div className="absolute inset-0 bg-gradient-to-r from-emerald-500 to-blue-500 rounded-3xl blur-xl opacity-20"></div>
            <div className="relative bg-white/10 backdrop-blur-lg rounded-3xl p-8 border border-white/20">
              <div className="flex items-center justify-between mb-6">
                <h3 className="text-2xl font-bold text-white">Live Student Performance</h3>
                <div className="flex items-center space-x-2">
                  <div className="w-3 h-3 bg-green-500 rounded-full animate-pulse"></div>
                  <span className="text-green-400 text-sm font-medium">LIVE</span>
                </div>
              </div>

              <div className="space-y-6">
                <div className="bg-white/5 rounded-2xl p-6">
                  <div className="text-gray-300 text-sm mb-2">Today&apos;s Student P&L</div>
                  <div className="flex items-center justify-start">
                    <RollingOdometer value={currentPnL} />
                  </div>
                  <div className="text-lg text-green-400">+{Math.abs(changePercent)}%</div>
                </div>

                <div className="grid grid-cols-2 gap-4">
                  <div className="bg-white/5 rounded-xl p-4">
                    <div className="text-gray-300 text-sm">Active Students</div>
                    <div className="text-xl font-semibold text-white">1,247</div>
                  </div>
                  <div className="bg-white/5 rounded-xl p-4">
                    <div className="text-gray-300 text-sm">Profitable Today</div>
                    <div className="text-xl font-semibold text-green-400">89%</div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* Visual Illustration */}
          <div className="relative">
            <div className="absolute -top-8 -right-8 w-32 h-32 bg-gradient-to-br from-emerald-400 to-blue-500 rounded-full opacity-20 animate-pulse"></div>
            <div className="relative">
              <svg
                width="400"
                height="300"
                viewBox="0 0 400 300"
                className="w-full h-auto max-w-md mx-auto"
              >
                <defs>
                  <linearGradient id="manGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                    <stop offset="0%" stopColor="#3b82f6" />
                    <stop offset="100%" stopColor="#1e40af" />
                  </linearGradient>
                  <linearGradient id="screenGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                    <stop offset="0%" stopColor="#10b981" />
                    <stop offset="100%" stopColor="#059669" />
                  </linearGradient>
                </defs>

                {/* Person figure */}
                <g transform="translate(50, 50)">
                  <circle cx="40" cy="30" r="20" fill="url(#manGradient)" />
                  <rect x="25" y="50" width="30" height="60" rx="5" fill="url(#manGradient)" />
                  <rect x="10" y="60" width="20" height="40" rx="10" fill="url(#manGradient)" />
                  <rect x="55" y="60" width="20" height="40" rx="10" fill="url(#manGradient)" />
                  <rect x="30" y="110" width="12" height="40" rx="6" fill="url(#manGradient)" />
                  <rect x="48" y="110" width="12" height="40" rx="6" fill="url(#manGradient)" />
                </g>

                {/* Dashboard screen */}
                <g transform="translate(200, 80)">
                  <rect
                    x="0"
                    y="0"
                    width="120"
                    height="80"
                    rx="8"
                    fill="url(#screenGradient)"
                    fillOpacity="0.2"
                    stroke="url(#screenGradient)"
                    strokeWidth="2"
                  />

                  <text
                    x="60"
                    y="25"
                    textAnchor="middle"
                    fill="#10b981"
                    fontSize="14"
                    fontWeight="bold"
                  >
                    Student P&L
                  </text>

                  <text
                    x="60"
                    y="50"
                    textAnchor="middle"
                    fill="#10b981"
                    fontSize="16"
                    fontWeight="bold"
                  >
                    ₹{currentPnL.toLocaleString('en-IN')}
                  </text>

                  <text x="60" y="65" textAnchor="middle" fill="#10b981" fontSize="12">
                    +{Math.abs(changePercent)}%
                  </text>
                </g>

                {/* Connection line */}
                <path
                  d="M 130 120 Q 180 100 200 120"
                  stroke="rgba(16, 185, 129, 0.6)"
                  strokeWidth="2"
                  fill="none"
                  strokeDasharray="5,5"
                />
              </svg>
            </div>
          </div>
        </div>

        {/* Achievement Stats */}
        <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
          {achievementStats.map((stat, index) => {
            const Icon = stat.icon
            return (
              <div
                key={index}
                className="bg-white/10 backdrop-blur-lg rounded-2xl p-6 border border-white/20 text-center"
              >
                <div className="w-12 h-12 bg-gradient-to-r from-emerald-500 to-blue-500 rounded-xl flex items-center justify-center mx-auto mb-4">
                  <Icon className="w-6 h-6 text-white" />
                </div>
                <div className="text-2xl font-bold text-white mb-2">{stat.value}</div>
                <div className="font-semibold text-emerald-400 mb-2">{stat.label}</div>
                <div className="text-sm text-gray-300">{stat.description}</div>
              </div>
            )
          })}
        </div>
      </div>
    </section>
  )
}
